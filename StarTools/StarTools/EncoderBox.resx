<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="radioButton1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AADy9fj/SE91/2tGP/94UEb/bUY8/2VAM/9nQTX/ZkA0/2dBNP9mQDT/Z0I2/103IP9mPR//b0gr/z05
        Z/9FQpf/LTN2/x4saP8xNHz/LTV5/0k1Mv9jOR//ZkA3/2ZANP9mQDT/ZkA0/2ZANf9sRDT/SS8z/2d2
        nf/t5dz/oXRU///89f9eaY//XT0+/3tSR/9tRz3/ZT80/2ZBNf9nQTT/Z0E1/2ZANP9mQDb/ZD8y/2Q5
        GP9cPSX/Pz2L/4xa4v9FPZP/Iy9s/1RCoP90U9D/MjFM/2pAKf9mQTj/ZUA1/2ZANf9mQDT/ZUA1/29F
        NP87KTf/ipm7/+PVxv+od1P///Lh/4GPsf9LNED/flRH/21IQP9oQDH/aUEz/2ZANP9lQDT/aEI1/25E
        M/9pQTT/VDEi/z0nIP8bImP/KSF+/xciZf8TJF7/JiZ0/ysjhP8lIz//WDUt/2Y/Mv9uRDP/aEI1/2VA
        Nf9lQDX/bkQz/y4oRP+6xtz/zbai/7iBV//73L//rrvU/zsvSf99Ukb/d00//1g9Pf9ROkD/Z0E0/2tD
        M/9eOTD/Pi07/zQ2Wf9IU3z/YnCY/3yLrP+So7v/n67F/5ypxf+UpLv/k6O6/3iGqP9TX4f/OTpd/zws
        Pf9cODL/bUM0/2dBNf9jPjL/Mjde/+Xp8f+1ln3/ypBj/+e6lP/h5u//Oz5j/3xPP/9YRE//OjRP/2ZB
        Nf9uQzD/UTY6/0ZOcf99jLn/usXo/9Pb/P/s9P//9v7//+31+P+JlsL/qbX7/42a3f+ptND/+////+nz
        /v/K1e//iJjB/0RPeP9BMj//b0Q0/00xM/9ebJT/8u3n/62AYP/coHH/2Z9z//z17f9dZon/RjZJ/zc1
        Vf9cPTv/UzxC/0Q2RP9VYpn/lZjz/7i3//+opv7/mZb//7W4+P/u9v//oKzG/1Jguv+ZpP//kJz//1xq
        r//Z4u3/qqr6/7m5/f/Dw///m5v5/1JgsP9GO0f/OCg7/6Wzz//h0sX/oXBN/9+ldv/TlWT//ObP/5Ce
        vv8XIFD/Uz5G/x4uY/8aLWb/NzdZ/zE4XP95ftP/q6n//5ye6f+KjNb/nJzy/+72///Y4vL/hJG+/2Nx
        sP9pd7H/mqfK/+fv/P/R1v//kI7r/4yL6v+qp/3/n5r//1xln/8RHk//YW+X///+/P+niHP/t4Jc/9ed
        b//+8uX/bn+n/0oyOP80NFf/KjJh/29NSP9rQjf/Sk9y//H6//+Umrr/KTxu/ytGe/8wQHL/sLrS//T8
        ///t9v3/4+z3/+Xv+P/v+P7/6/T//3yIqf8qPnb/Kj93/3iCo//W2fv/cn60/xoqXP8OHlb/mqXA//Pq
        4f+VbVL/8s2t/77J3P8vLU//YEA9/y0yW/9yTEX/gVVE/0AtPP+Qnbz/3d/l/xgtZP9nntv/js7//1KC
        v/8pOW3/2uTz/+jx/v/n8P7/5e78//L7//+dqML/HDh1/3637/99uPL/JkWB/3mCnv86RW3/Iyxa/zMy
        Uv8sMVn/2+Hu/8q0ov/88Ob/WmiS/1s6OP86NlP/WERP/3pQQ/96UUT/KSVG/6i0zP+QlK3/NmKe/6vq
        ///S8vn/n9///ylIgv+gqcP/9P3//+Ps+v/i6/n/8/z//1djjv9YjsT/0Pz//8f0//9indL/TVyK/2ln
        gP88M0z/Pjxb/0UuOP9kdJz//vnz/8nQ4P89O1v/Z0ZB/zE0Wf92TkT/dE5F/3hQRf8ZH0z/i5a0/4KJ
        pv8kSIr/msHj//b///+Is9z/HDl3/5GcuP/1/v//4+z5/+32/v/v9///TlyI/0Bppf/d9vz/0ev1/z9q
        p/9LWob/YmyO/1Y8Qf9LQFb/a0Y8/ykzYP/X3Ob/hJCw/085Rf9VQUv/QjtV/3tQQv91Tkb/bkpC/yo2
        av9TYo7/l5+4/wIST/9FV4L/y+nu/zZHdf8HF1P/qLTN//T8///m7/r/vcvm//T+//9ufKD/AA5L/4Sc
        t/90i6r/AQ9M/1Nhi/9LWYP/XUBC/3VQR/94Tj//MypE/4iVtf9XYor/ZEJA/0Q7Uf9UQlD/elBC/3dP
        Rv9mRD7/Q1KK/zhNkP9UYon/Kztu/xgpYf8hMmj/FSdh/yk6b//W4O//8/z//32Mtf8xK0r/dYGt/4qY
        v/8RIlr/Fyhi/xYmYP8cLWb/IzRq/yExZv9oSUf/eE9E/3lPQ/9MNDz/Tl6K/ztFcP9vSUH/PThU/19G
        TP95T0P/d05E/2pKSP8uMVn/PThV/x8qWf8ZLWf/GS1o/xssY/8RIln/i5m2//3///+queD/MTFX/35Q
        Pv9KNUD/PlGO/yc4cP8WJ17/Gyxj/xIkW/9ebp3/QU5//2hFQP93T0b/eE9F/10+O/8xP2z/Mjpm/3NN
        Qv89OFb/Y0hL/3hPQ/93TkT/aUpK/zs1T/9xRjT/bkpD/1I9R/8sL1T/Jjp4/4GTzv/j7Pv/7vf//1lq
        o/9YPUD/fFNI/3hNP/8+NlH/bX/G/0BQi/8lN3X/q7fV/9Hf+f87QG7/cks//3VORv93T0X/Z0M9/ykz
        YP80OmX/dk1C/z85Vv9jR0v/eE9D/3VORf9vTUf/NzRT/2ZDOv97UUT/flFC/3dLPP9QPEX/R1WR/6Cv
        6//H1fj/QEd1/3FKP/90Tkb/elFH/1U3Nf9TZKL/WWWc/ycvX/++y/z/n7Dd/zUxU/98UUP/c01F/3dP
        Rf9pRT//KDJf/zlBav9xS0P/ZEhK/2xKSP92TkP/c0xD/3dPRP84Nlf/SThH/1xETP9fRkv/Y0dM/2NG
        Rv89Ljr/QU+I/4aZ4/9HQF3/eE5A/3NNRv92T0X/aEU+/y45af83P23/MSxI/2V4uv9SZKH/RjdJ/3pQ
        RP9zTUX/eE9F/2ZEQf8sOGb/SlR9/2REQ/97UUT/dU5E/3VQR/92Ukr/elBD/0M8VP9UOz7/a0hE/2RI
        S/9jR0r/Z0pK/3dORP9ROD7/QFWY/1JFW/95TkH/c01F/3VPR/98UkT/NDFR/zs5Wf9MOUT/RVqd/zlA
        bv9yS0H/d1BH/3RNRf95UEX/YEJC/zRCcf9pdZn/Vz1D/3tSRv9ySkL/flxV/4tycv96T0H/VENQ/0M1
        SP93Szr/eFBF/3hPQ/93T0T/dU5G/3pOP/80MVL/Sj5V/3xRQv9yTEP/eVVP/4xsY/86NU//W0VQ/2RE
        Qf8eNnT/WURN/35XTP+Ha2r/dVBI/3tQQ/9UPEX/SFeF/52owf9GN0r/flNE/3NNRf93UUj/eFNL/3ZN
        Qv9uTEj/NzRT/2tEOP91Tkb/dE1F/3VORf9zTUX/elBE/1xESv9FO1T/e1BC/3NNRf90TUX/eVBC/z03
        Uf9qSkn/SzxN/zw3Vf95UEL/dE1F/3dQSP9zTkX/fVJE/0M1Sf9zgqb/4Obv/0RFZP91TED/dU9G/3RN
        RP90TEP/dE1F/3tQQv9GPFT/TTlD/3lOQP90Tkb/dU5F/3RNRf92TkT/b0xH/1VBT/93T0T/dE1F/3dP
        RP9tS0b/OTdX/3NNRf9cREz/dE1F/3ZORf90TUX/dE1E/3RNRf96UEP/NjVX/7zF1///9ej/bHme/1Q5
        P/98U0b/dE1F/3VORf91TkX/dk5E/29MSP81M1T/bEY9/3hQRf90TUX/dE1E/3VORf91TkT/dk5E/3VO
        Rf90TUX/eU9D/1tETf9WQk7/ek9D/3hPQ/91TkX/dE1F/3VORf90TUX/eFBF/2RDQf9FUXv/9fT1//DH
        pf/Ezd7/Ly9T/3tRRP90TUX/dU5F/3VORf9zTUX/elBC/1pETf86NFH/dk1C/3ZORf90TUT/dU5F/3VO
        Rf90TUT/dU1E/3RNRP90TUX/dE1E/3dPRP90TUX/dE1F/3RNRf90TUT/dE1E/3JNRf9/VEX/NStH/5Wi
        wP/p2cv/1plq//zs2v9meKL/RjJB/4BVRv9yTEX/dU5F/3VORf9zTUX/e1BD/1NBUP9HPFL/d09E/3RO
        Rf90TkX/dU5F/3VORf91TkX/dU5F/3VORf91TkT/dE5F/3VORf91TkX/dU5F/3VORf90TUX/elFF/2JD
        Q/85RnT/7e7w/7GOdf/Xmmv/4rCG/+Xo7f8yQHD/X0FC/31TRf9yTEX/dE1E/3RNRP90TUT/eE9D/21L
        R/9zTUT/dE1E/3RNRP90TUT/dE1E/3RNRP90TUT/dE1E/3RNRP90TUT/dE1E/3RNRP90TUT/c01E/3ZO
        Rf96UUX/IydP/7fD2f/ZyLn/t4JZ/9uhc//Vlmb/78ek/8nT4v8mMmH/XkFC/4BVRf9zTUX/c01F/3VO
        Rf90TkX/dk5E/3VORf91TkX/dU5F/3RNRP90TUT/dU5F/3VORf91TkX/dU5F/3VORf91TkX/dU5F/3JN
        Rf95UEX/elFF/yckR/+Hlbb/9e/q/7OGZf/coHD/2p5w/9qgc//TlWX/882q/8nS4f8wPnD/SDNC/31T
        Rf97UkX/dE1F/3NNRf90TUX/dU5F/3VORf90TUT/dE1E/3VORf91TkX/dU5F/3VORf91TkX/dE1F/3NN
        Rf91TkX/f1RF/2xJRP8lJk3/h5W3//v59f+9lXf/1ppq/9uhc//an3H/2p9x/9ugc//TlWX/7sOd/+Li
        5v9bbZr/KytQ/1g8Qf96UET/flNF/3hQRf91TkX/c01F/3NNRf9zTUX/c01F/3NNRf9zTUX/dE1F/3VO
        Rf96UUT/flNF/3VOQ/9HM0L/KzRi/6q30f/79e7/wpd3/9eZaf/coXP/2Z5w/9qfcf/an3H/2p9x/9uh
        c//Ul2f/4qyB//rm0/+xvtP/TV+N/y8vVv9EMkL/YkFB/3RMQv98UUT/flNF/35URf9+U0X/flNF/31T
        RP96UEP/cUpB/10+QP8/MEP/LjRd/2d4ov/g6PL/9eTU/8iVb//Ym2v/26Fz/9mecP/an3H/2p9x/9qf
        cf/an3H/2p9x/9qgc//Xm2z/1phn/+/Cm//359j/wsvb/3mLsf9JWIT/NTtl/zMwUv86L0j/PzBE/0Ax
        RP88L0b/Ny9L/zMzVv84QGr/UWGN/4iavP/W3er///Pk/+S9nP/PlGb/3J9v/9qgc//ZnnD/2p9x/9qf
        cf/an3H/2Z9x/9qfcf/an3H/2p9x/9qgcv/aoHL/1Zho/9eZaf/quI7/+dm8//Lk2P/a2N7/u8PU/6Ku
        x/+SoL3/j528/5qnw/+rtsz/xMrW/+Hd3f/359n/+tu9/+e4kP/VmWr/15ho/9yhc//an3L/2p9x/9qf
        cf/an3H/2p9x/9Whdf/VoHb/2J90/9qfcf/annD/259x/9qfcf/aoHL/2qBy/9aZav/TlGT/2Jtr/+Or
        fv/uvJL/9Mii//bNqP/2zan/9cqk//HCmf/qton/4Kd5/9eaav/TlGP/15lp/9qgcv/aoHP/2p9x/9qf
        cf/an3H/2p9x/9qfcf/an3H/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>